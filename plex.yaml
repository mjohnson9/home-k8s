apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plex
  namespace: media
  labels:
    app: plex
spec:
  serviceName: plex
  replicas: 1
  selector:
    matchLabels:
      app: plex
  template:
    metadata:
      labels:
        app: plex
    spec:
      containers:
      - name: plex
        image: mediadepot/plex-cuda
        securityContext:
          privileged: true
        volumeMounts:
        - name: config
          mountPath: /config
        - name: tv-shows
          mountPath: /data/tvshows
        - name: movies
          mountPath: /data/movies
        - name: music
          mountPath: /data/music
        - name: nvidia-drivers
          mountPath: /usr/local/nvidia
          readOnly: true
        ports:
        - containerPort: 32400
          name: https
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /identity
            port: 32400
            scheme: HTTPS
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
        - name: config
          hostPath:
            path: /var/lib/plex
            type: DirectoryOrCreate
        - name: tv-shows
          hostPath:
            path: /var/lib/media/tv
            type: DirectoryOrCreate
        - name: movies
          hostPath:
            path: /var/lib/media/movies
            type: DirectoryOrCreate
        - name: music
          hostPath:
            path: /var/lib/media/music
            type: DirectoryOrCreate
        - name: nvidia-drivers
          hostPath:
            path: /opt/drivers/nvidia
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: plex
  namespace: media
spec:
  selector:
    app: plex
  ports:
  - name: http
    port: 80
    targetPort: 32400
  - name: https
    port: 443
    targetPort: 32400
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: plex
  namespace: media
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    certmanager.k8s.io/acme-challenge-type: dns01
    certmanager.k8s.io/acme-dns01-provider: route53
spec:
  rules:
  - host: plex.johnson.computer
    http:
      paths:
      - path: /
        backend:
          serviceName: plex
          servicePort: https
  tls:
    - hosts:
      - plex.johnson.computer
      secretName: plex-certificate
