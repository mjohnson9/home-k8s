apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: heimdall
  namespace: media
  labels:
    app: heimdall
spec:
  serviceName: heimdall
  replicas: 1
  selector:
    matchLabels:
      app: heimdall
  template:
    metadata:
      labels:
        app: heimdall
    spec:
      containers:
      - name: heimdall
        image: linuxserver/heimdall:amd64-2.1.13-ls45
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 70Mi
        volumeMounts:
        - name: config-volume
          mountPath: /config
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
        - name: config-volume
          hostPath:
            path: /var/lib/heimdall
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: heimdall
  namespace: media
spec:
  selector:
    app: heimdall
  ports:
  - name: http
    port: 80
  - name: https
    port: 443
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: heimdall-web-ui
  namespace: media
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    certmanager.k8s.io/acme-challenge-type: dns01
    certmanager.k8s.io/acme-dns01-provider: route53
spec:
  rules:
  - host: home.johnson.computer
    http:
      paths:
      - path: /
        backend:
          serviceName: heimdall
          servicePort: https
  tls:
    - hosts:
      - home.johnson.computer
      secretName: heimdall-certificate
