apiVersion: v1
kind: Namespace
metadata:
  name: kuberos
  labels:
    name: kuberos
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kuberos
  name: kuberos
  namespace: kuberos
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kuberos
    spec:
      containers:
      - image: negz/kuberos:latest
        name: kuberos
        command: ["/kuberos", "https://accounts.google.com", "***REMOVED***", "/cfg/secret", "/cfg/template"]
        ports:
        - name: http
          containerPort: 10003
        volumeMounts:
        - name: config
          mountPath: /cfg
      volumes:
      - name: config
        configMap:
          name: kuberos
          items:
          - key: template
            path: template
          - key: secret
            path: secret
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kuberos
  namespace: kuberos
  labels:
    app: kuberos
data:
  template: |
    apiVersion: v1
    kind: Config
    current-context: home
    clusters:
    - name: production
      cluster:
        certificate-authority-data: ***REMOVED***
        server: https://server.management.lan
  secret: ***REMOVED***

---
kind: Service
apiVersion: v1
metadata:
  name: kuberos
  namespace: kuberos
spec:
  ports:
    - port: 80
      targetPort: http
  selector:
    app: kuberos
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kuberos
  namespace: kuberos
spec:
  rules:
  - host: kubeconfig.home.lan
    http:
      paths:
        - backend:
            serviceName: kuberos
            servicePort: 80
